name: CI

on:
    push:
        branches: ['dev', 'main']
    pull_request:
        branches: ['dev', 'main']

permissions:
    contents: read
    id-token: write
    pages: write

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    changes:
        name: Filter changes
        runs-on: ubuntu-latest
        # Set job outputs to values from filter step
        outputs:
            app: ${{ steps.filter.outputs.app }}
            tsc: ${{ steps.filter.outputs.tsc }}
            website: ${{ steps.filter.outputs.website }}

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - name: Filter paths
              uses: dorny/paths-filter@v3
              id: filter
              with:
                  filters: |
                      app:
                        - 'app/**'
                        - '.github/workflows/*'
                      tsc:
                        - 'app/*.{ts,tsx}'
                        - '.eslintrc.*'
                        - '**/tsconfig*.json'
                        - 'package.json'
                        - '.github/workflows/*'
                      website:
                        - 'website/**'
                        - '.github/workflows/*'
    ts-lint:
        name: Lint TS files
        runs-on: ubuntu-latest
        needs: changes
        if: needs.changes.outputs.tsc == 'true' || github.ref == 'refs/heads/main'

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup node.js 18.x
              uses: actions/setup-node@v4
              with:
                  node-version: 18

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Lint ts files
              run: pnpm lint

    website:
        name: Build Website
        runs-on: ubuntu-latest
        needs: changes
        if: needs.changes.outputs.website == 'true' || github.ref == 'refs/heads/main'

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup node.js 22.x
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Lint website
              run: |
                  cd website
                  pnpm lint

            - name: Build website
              run: |
                  cd website
                  pnpm build

            - name: Setup Pages
              if: github.ref == 'refs/heads/main'
              uses: actions/configure-pages@v5

            - name: Upload artifact
              if: github.ref == 'refs/heads/main'
              uses: actions/upload-pages-artifact@v3
              with:
                  path: './website/dist'

            - name: Deploy to GitHub Pages
              if: github.ref == 'refs/heads/main'
              id: deployment
              uses: actions/deploy-pages@v4

    build:
        name: Build app
        needs: changes
        if: needs.changes.outputs.app == 'true' || github.ref == 'refs/heads/main'
        strategy:
            fail-fast: false
            matrix:
                platform: [windows-latest, macos-latest, ubuntu-22.04]
        runs-on: ${{ matrix.platform }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v4
              name: Setup pnpm cache
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

            - name: Install Rust stable
              uses: dtolnay/rust-toolchain@stable

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: './app/backend -> target'

            - name: Install dependencies
              run: pnpm install

            - name: Build app
              uses: tauri-apps/tauri-action@v0
